getgenv().gethui = function() return game:GetService('CoreGui') end


local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/fkdAkla/dragon/refs/heads/main/orion')))()

local player = game.Players.LocalPlayer

_G.stopped = false

local food = game.Workspace.Interactions.Nodes.Food --"LargeFoodNode".BillboardPart
local genv = getgenv()
local player = game.Players.LocalPlayer

--getgenv().TargetNode = food.LargeFoodNode1

genv.funcs = genv.funcs or {}
genv.initFuncs = genv.initFuncs or {}
genv.currentHooking = genv.currentHooking or {}

local currentHooking = genv.currentHooking

local funcs = genv.funcs

genv.neededFuncs = {"_updateMousePosition",
    "GetEntityToControl",
    "CanEntityDoAction"
    --"_canAimAtPosition",
    --"_getAutoTargetPosition",
    --"_update"
}
if not genv.initFuncs.getFunc then
    genv.initFuncs.getFunc = (function(fName)
        --if not genv.currGc then genv.currGc = getgc() end
        
        for i, v in getgc() do
            
            if type(v) ~= "function" then continue end
            
            local f = debug.info(v, "n") == fName and v or nil
            if f then
                print("Found "..fName.." function!")
                return f
            end
        end
    end)

end


if not genv.initFuncs.init then
    genv.initFuncs.init = (function()
    
        for i, v in genv.neededFuncs do
            local f = genv.initFuncs.getFunc(v)
            if not f then warn('not found '..v) continue end
            genv.funcs[debug.info(f, "n")] = f
        end
    
    end)

end

genv.initFuncs.init()

local updMousePosFunc = genv.funcs._updateMousePosition

local player = game.Players.LocalPlayer
local hrp = player.Character.HumanoidRootPart

local ups = debug.getupvalues(updMousePosFunc)

--if true then return end

local oldMouseP
oldMouseP = hookfunction(updMousePosFunc, function(p_u_139, p140)
    -- upvalues: (copy) v_u_19, (ref) v_u_28, (copy) v_u_23, (copy) v_u_12, (copy) v_u_22, (ref) v_u_29
    if genv.currentHooking._updateMousePosition then
        if not p_u_139.IsLocalPlayer then return end
        local v_u_19, v_u_28, v_u_23, v_u_12, v_u_22, v_u_29 = unpack(ups)
        p_u_139.BaseMaxBreathDistance = p_u_139.MaxBreathDistance + (p_u_139.Dragon.Flying and (p_u_139.MaxBreathDistance * v_u_19.FireBreathDistanceWhileFlyingMultiplier or 0) or 0)
        local v141 = v_u_28
        local v142 = p_u_139.BaseMaxBreathDistance
        local v143 = 50
        v141.MaxDistance = v142 + math.abs(v143)

        local newPos = genv.FoodPos or (hrp.CFrame * CFrame.new(0,0,-10)).Position
        p_u_139.LastMousePosition = newPos
        local v144 = p_u_139:_clampPosition((p_u_139:_getTargetPosition(p_u_139.LastMousePosition)))
        p_u_139.Position = v144

            p_u_139.BreathImpactPart.BP.Position = v144
            p_u_139.BreathImpactPart.BG.CFrame = CFrame.new(Vector3.new(0, 0, 0), v144 - v_u_28.UnitRay.Origin)
            if p140 then
                p_u_139.BreathImpactPart.Position = v144
            end
            
            return true
    end
    return oldMouseP(p_u_139, p140)
end)
local camera = workspace.Camera
local function farm()
    _G.stopped = false
    local fire = genv.funcs.GetEntityToControl()
    
    if not fire then return end
    
    local c
    c = camera.ChildAdded:Connect(function(child)
        local handle = child:FindFirstChild("Handle")
        if not handle then return end
        
        
        task.wait(1)
        if not handle then return end
        firetouchinterest(player.Character.HumanoidRootPart, handle, 0)
        
     end)
    
    task.spawn(function()
    while task.wait() do
        if _G.stopped then c:Disconnect() return end
        for i, v in food:GetChildren() do
            local bg = v:FindFirstChild("BillboardPart")
            if not bg then continue end
            
            local deadVal = bg.Dead
            
            if deadVal.Value then continue end
            
            --camera.CameraSubject = v["5"]:FindFirstChildWhichIsA("MeshPart")
            local hb = v.Hitbox
            camera.CameraSubject = hb
            genv.FoodPos = hb.Position
            
            while task.wait() do
                if _G.stopped then c:Disconnect() return end
                --local mousePos = mouse.Hit.Position
                
                local tPos = v["2"]:FindFirstChildWhichIsA("MeshPart").CFrame
                
                player.Character:PivotTo(tPos)--CFrame.new(tPos, mousePos))
                
                if deadVal.Value then fire:_setAttack(false) genv.FoodPos = nil break end
            end
                
                
        end
    end
    
    end)
    
    while not _G.stopped do
        task.wait()
        if not genv.FoodPos then continue end
        task.wait(0.5)
        if genv.funcs.CanEntityDoAction(fire, "_setAttack", "Fire") then
        fire:_setAttack(true, "Fire")
        end
        
        task.wait(0.5)
        
        if genv.funcs.CanEntityDoAction(fire, "_setAttack") then
        fire:_setAttack(false)
        end
    end
    
end

local Window = OrionLib:MakeWindow({Name = "Cockhack", HidePremium = false, SaveConfig = false, ConfigFolder = "OrionTest"})
local Tab = Window:MakeTab({
	Name = "Main",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "Farm"
})

Tab:AddToggle({
	Name = "Food Farm",
	Default = false,
	Callback = function(Value)
		 if Value then
           genv.currentHooking._updateMousePosition = true
           farm()
        else
            _G.stopped = true
            genv.currentHooking._updateMousePosition = nil
            camera.CameraSubject = player.Character
        end
	end    
})
